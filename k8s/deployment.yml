# Specifies the API version for the Deployment object.
apiVersion: apps/v1
# Specifies the kind of object, which is a Deployment.
kind: Deployment
# Metadata for the Deployment, including its name.
metadata:
  name: web-app-deployment
# The specification for the Deployment's desired state.
spec:
  # --- THIS IS THE CHANGE ---
  # The number of desired Pod replicas. We are scaling from 2 to 5.
  replicas: 2
  # The selector to identify which Pods this Deployment manages.
  selector:
    matchLabels:
      app: my-web-app
  # The template for the Pods that will be created.
  template:
    metadata:
      # These annotations tell Prometheus to find and scrape this pod.
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9113"
      # Labels applied to each Pod created from this template.
      labels:
        app: my-web-app
    spec:
      # The list of containers to run in the Pod.
      containers:
      - name: nginx-web-container
        # The Docker image to use for the container.
        image: my-web-app:latest
        # This policy tells Kubernetes not to pull the image from a remote registry.
        imagePullPolicy: Never
        # The port the container exposes.
        ports:
        - containerPort: 80
        # Mount the custom Nginx config from the ConfigMap
        volumeMounts:
        - name: nginx-config-volume
          mountPath: /etc/nginx/conf.d
      # This is the sidecar container that exports Nginx metrics.
      - name: nginx-exporter
        image: nginx/nginx-prometheus-exporter:latest
        args:
        - -nginx.scrape-uri=http://127.0.0.1/stub_status
        ports:
        - containerPort: 9113
      # This volume makes the ConfigMap available to the pod
      volumes:
      - name: nginx-config-volume
        configMap:
          name: nginx-config

